# KB Reflex - AI 투자 심리 코칭 플랫폼

## 📁 프로젝트 구조

```
KB_Reflex/
├── main_app.py                    # 메인 앱 (간소화된 로그인)
├── requirements.txt               # 필요한 패키지들
├── train_emotion_model.py        # AI 모델 훈련 스크립트
├── 
├── pages/                        # Streamlit 페이지들
│   ├── 1_Dashboard.py           # 대시보드 (거래 + AI 브리핑)
│   ├── 2_Trade_Review.py        # 거래 복기 (상황 재현)
│   ├── 3_AI_Coaching.py         # AI 투자 심리 분석
│   └── 4_Investment_Charter.py  # 투자 헌장 관리
│
├── db/                          # 데이터베이스 모듈
│   ├── user_db.py              # 사용자 거래 데이터
│   └── principles_db.py        # 투자 원칙 데이터
│
├── api/                         # API 모듈
│   └── market_api.py           # 시장 데이터 API (더미)
│
├── ml/                          # 머신러닝 모듈
│   ├── predictor.py            # 감정 분석 예측기
│   ├── ai_briefing.py          # AI 브리핑 서비스 ✨ 신규
│   └── investment_charter.py   # 투자 헌장 관리 ✨ 신규
│
├── utils/                       # 유틸리티
│   └── ui_components.py        # UI 컴포넌트
│
├── data/                        # 데이터 폴더 (자동 생성)
│   ├── kim_gukmin_trades.csv   
│   ├── park_tuja_trades.csv    
│   └── *_charter.json          # 사용자별 투자 헌장
│
└── sentiment_model/             # 훈련된 AI 모델 (자동 생성)
    ├── pytorch_model.bin
    ├── config.json
    ├── tokenizer.json
    └── model_info.json
```

## 🚀 실행 가이드

### 1. 환경 설정
```bash
# 패키지 설치
pip install -r requirements.txt

# 프로젝트 루트 디렉토리에서 실행
cd KB_Reflex/
```

### 2. AI 모델 훈련 (최초 1회)
```bash
python train_emotion_model.py
```

### 3. 애플리케이션 실행
```bash
streamlit run main_app.py
```

## ✨ 주요 개선사항

### 🔧 **1. 로그인 시스템 간소화**
- **기존**: 복잡한 온보딩 → **개선**: 구글 로그인 스타일
- 1클릭으로 사용자 전환 가능
- 온보딩은 간단하고 직관적으로 개선

### 🤖 **2. AI 브리핑 기능 추가 (핵심!)**
- **위치**: 대시보드 거래 섹션
- **기능**: 매매 전 객관적 정보 제공
- **철학**: 절대 매매 추천하지 않음, 오직 정보만 제공
- **내용**:
  - 현재 시장 상황 분석
  - 사용자 과거 패턴 분석  
  - 투자 원칙과의 부합도 체크
  - 위험 요소 식별
  - 스스로 답해야 할 핵심 질문 제시

### 📜 **3. 투자 헌장 관리 시스템**
- 나만의 투자 원칙 생성/관리
- 원칙 위반 기록 및 분석
- 성공 사례 축적
- 실시간 준수율 체크
- 복기에서 학습한 내용을 원칙으로 자동 추가

### 🔄 **4. 페이지 간 연동 강화**
- 거래 복기 → AI 분석 요청
- 복기 학습 → 투자 헌장 자동 업데이트
- 대시보드 → AI 브리핑 → 거래 실행
- 모든 페이지에서 사용자 전환 가능

## 🎯 사용 시나리오

### **신규 사용자 (이거울)**
1. 로그인 → 투자 대가 원칙 선택
2. 대시보드에서 모의 거래 체험
3. AI 브리핑으로 정보 수집 습관 형성
4. 투자 헌장에서 나만의 원칙 수립

### **기존 사용자 (박투자/김국민)**
1. 로그인 → 과거 거래 선택
2. 상황재현 복기로 당시 상황 분석
3. AI 코칭으로 심리 패턴 파악
4. 투자 헌장으로 개선 원칙 수립

## 💡 **핵심 혁신 포인트**

### **1. "거울" 철학 구현**
- AI는 절대 매매 추천하지 않음
- 오직 객관적 정보와 질문만 제공
- 사용자가 스스로 답을 찾도록 유도

### **2. 상황재현 복기**
- 과거 거래 시점의 주가, 뉴스, 지표를 정확히 재현
- 단순 메모가 아닌 실제적인 복기 경험

### **3. 개인화된 학습 순환**
- 거래 → 복기 → 학습 → 원칙 수립 → 개선된 거래
- 데이터 기반 자기 성장 시스템

## 🏆 **KB AI Challenge 경쟁력**

1. **실용성**: 실제 투자자들이 겪는 문제 해결
2. **기술력**: 딥러닝 기반 실시간 감정 분석
3. **차별화**: "거울" 철학의 독창적 AI 활용
4. **완성도**: 상용 서비스 수준의 UI/UX
5. **확장성**: 실제 증권사 API 연동 가능한 구조

## ⚡ **빠른 테스트 방법**

1. **main_app.py 실행**
2. **김국민 선택** → 손실 거래 복기 경험
3. **박투자 선택** → FOMO 패턴 분석 체험  
4. **이거울 선택** → 신규 사용자 온보딩 체험
5. **대시보드에서 AI 브리핑** 테스트
6. **투자 헌장** 기능 확인

모든 기능이 서로 연동되어 완전한 투자 심리 개선 플랫폼을 구현했습니다! 🚀